import sys
sys.stdin = open('1808.txt', 'r')

'''
여기는 인풋에 주어지는 숫자밖에없어
예를들어 1 1 0 0 0 0 0 0 0 0 0 ...
이면
0과 1 숫자밖에 못누르는거야
그리고 곱하기 뿐이못눌러
그래서 주어지는 숫자와 곱하기만을 이용하여 인풋에 넣은 목표 숫자를 만들 수 있는가 없는가
만들 수 있다면 최소 버튼을 몇번 눌러야 가능한가
를 구하는문제인데
주어진 예시에서 1,2,5가 가능하고 60을 만들라면
1,2 를 눌러서
12를 만들고
곱하기
5
=
해서
12 두번
곱하기 한번
5 한번
= 한번
해서 총 5번의 계산기 버튼을 눌러야겠지
2,4 가 가능한 계산기에서 23을 만들라면
죽었다 깨어나도 안되니까
-1을 출력해야하구
이해되셨나요?

0 1 1 0 0 1 0 0 0 0
1,2,5,*,=를 사용해서 60만들기


#1 6
#2 8
#3 7
#4 6
#5 10
#6 7
#7 -1
#8 11
'''


def isPrime(g):
    a = [False, False] + [True]*(g-1)
    primes = []

    for i in range(2, g+1):
        if a[i]: # True라면
            primes.append(i)
            for j in range(2*i, g+1, i):
                a[j] = False
    return a


for tc in range(int(input())):
    temp = list(map(int,input().split()))
    goal = int(input())

    # 가능한 숫자로 변환한다.
    mylist = []
    for i in range(len(temp)):
        if temp[i] == 1:
            mylist.append(i)
    print(mylist)
    print(goal)
    # 2. goal으로 부터 먼저 에라토스테네스의 체를 이용하여 소수구하는 함수
    '''
    소수: 소수(Prime Number)는 약수로 1과 자기 자만을 가지는 정수
    에라토스테네스의 체: 
    범위에서 합성수를 지우는 방식으로 소수를 찾는 방법. 
    1. 1은 제거 
    2. 지워지지 않은 수 중 제일 작은 2를 소수로 채택하고, 나머지 2의 배수를 모두 지운다. 
    3. 지워지지 않은 수 중 제일 작은 3을 소수로 채택하고, 나머지 3의 배수를 모두 지운다. 
    4. 지워지지 않은 수 중 제일 작은 5를 소수로 채택하고, 나머지 5의 배수를 모두 지운다. 
    5. (반복)     
    '''
    myprimes = isPrime(goal) # 남은 True가 소수이다.
    print(myprimes)

    # 1. 약수구하는 함수





    # 3. 약수를 구해서 자판기에 있는 숫자라면 1을 리턴하는 함수


